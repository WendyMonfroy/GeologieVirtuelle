//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Boolean p_default_ActivateGeneralInterface;
        
        private static SteamVR_Action_Boolean p_default_ActivateMeasureInterface;
        
        private static SteamVR_Action_Boolean p_default_PlacePoint;
        
        private static SteamVR_Action_Boolean p_default_PlacePlane;
        
        private static SteamVR_Action_Boolean p_default_ActivateMeasurePointer;
        
        private static SteamVR_Action_Boolean p_default_DisplayResults;
        
        private static SteamVR_Action_Boolean p_default_PlaceMarker;
        
        private static SteamVR_Action_Boolean p_default_MoveElement;
        
        private static SteamVR_Action_Boolean p_default_PlaceWulffElement;
        
        private static SteamVR_Action_Boolean p_default_Scroll;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Pose p_mixedreality_ExternalCamera;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_ActivateGeneralInterface;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_ActivateMeasureInterface;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_ActivateMeasurePointer;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_PlacePoint;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_PlacePlane;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_PlaceMarker;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_PlaceWulfElement;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_MoveElement;
        
        private static SteamVR_Action_Boolean p_geologieVirtuelle_DisplayResults;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ActivateGeneralInterface
        {
            get
            {
                return SteamVR_Actions.p_default_ActivateGeneralInterface.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ActivateMeasureInterface
        {
            get
            {
                return SteamVR_Actions.p_default_ActivateMeasureInterface.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PlacePoint
        {
            get
            {
                return SteamVR_Actions.p_default_PlacePoint.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PlacePlane
        {
            get
            {
                return SteamVR_Actions.p_default_PlacePlane.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ActivateMeasurePointer
        {
            get
            {
                return SteamVR_Actions.p_default_ActivateMeasurePointer.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_DisplayResults
        {
            get
            {
                return SteamVR_Actions.p_default_DisplayResults.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PlaceMarker
        {
            get
            {
                return SteamVR_Actions.p_default_PlaceMarker.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_MoveElement
        {
            get
            {
                return SteamVR_Actions.p_default_MoveElement.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PlaceWulffElement
        {
            get
            {
                return SteamVR_Actions.p_default_PlaceWulffElement.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Scroll
        {
            get
            {
                return SteamVR_Actions.p_default_Scroll.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Pose mixedreality_ExternalCamera
        {
            get
            {
                return SteamVR_Actions.p_mixedreality_ExternalCamera.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_ActivateGeneralInterface
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_ActivateGeneralInterface.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_ActivateMeasureInterface
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_ActivateMeasureInterface.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_ActivateMeasurePointer
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_ActivateMeasurePointer.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_PlacePoint
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_PlacePoint.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_PlacePlane
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_PlacePlane.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_PlaceMarker
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_PlaceMarker.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_PlaceWulfElement
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_PlaceWulfElement.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_MoveElement
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_MoveElement.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean geologieVirtuelle_DisplayResults
        {
            get
            {
                return SteamVR_Actions.p_geologieVirtuelle_DisplayResults.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_ActivateGeneralInterface,
                    SteamVR_Actions.default_ActivateMeasureInterface,
                    SteamVR_Actions.default_PlacePoint,
                    SteamVR_Actions.default_PlacePlane,
                    SteamVR_Actions.default_ActivateMeasurePointer,
                    SteamVR_Actions.default_DisplayResults,
                    SteamVR_Actions.default_PlaceMarker,
                    SteamVR_Actions.default_MoveElement,
                    SteamVR_Actions.default_PlaceWulffElement,
                    SteamVR_Actions.default_Scroll,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.geologieVirtuelle_ActivateGeneralInterface,
                    SteamVR_Actions.geologieVirtuelle_ActivateMeasureInterface,
                    SteamVR_Actions.geologieVirtuelle_ActivateMeasurePointer,
                    SteamVR_Actions.geologieVirtuelle_PlacePoint,
                    SteamVR_Actions.geologieVirtuelle_PlacePlane,
                    SteamVR_Actions.geologieVirtuelle_PlaceMarker,
                    SteamVR_Actions.geologieVirtuelle_PlaceWulfElement,
                    SteamVR_Actions.geologieVirtuelle_MoveElement,
                    SteamVR_Actions.geologieVirtuelle_DisplayResults};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_ActivateGeneralInterface,
                    SteamVR_Actions.default_ActivateMeasureInterface,
                    SteamVR_Actions.default_PlacePoint,
                    SteamVR_Actions.default_PlacePlane,
                    SteamVR_Actions.default_ActivateMeasurePointer,
                    SteamVR_Actions.default_DisplayResults,
                    SteamVR_Actions.default_PlaceMarker,
                    SteamVR_Actions.default_MoveElement,
                    SteamVR_Actions.default_PlaceWulffElement,
                    SteamVR_Actions.default_Scroll,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.geologieVirtuelle_ActivateGeneralInterface,
                    SteamVR_Actions.geologieVirtuelle_ActivateMeasureInterface,
                    SteamVR_Actions.geologieVirtuelle_ActivateMeasurePointer,
                    SteamVR_Actions.geologieVirtuelle_PlacePoint,
                    SteamVR_Actions.geologieVirtuelle_PlacePlane,
                    SteamVR_Actions.geologieVirtuelle_PlaceMarker,
                    SteamVR_Actions.geologieVirtuelle_PlaceWulfElement,
                    SteamVR_Actions.geologieVirtuelle_MoveElement,
                    SteamVR_Actions.geologieVirtuelle_DisplayResults};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_ActivateGeneralInterface,
                    SteamVR_Actions.default_ActivateMeasureInterface,
                    SteamVR_Actions.default_PlacePoint,
                    SteamVR_Actions.default_PlacePlane,
                    SteamVR_Actions.default_ActivateMeasurePointer,
                    SteamVR_Actions.default_DisplayResults,
                    SteamVR_Actions.default_PlaceMarker,
                    SteamVR_Actions.default_MoveElement,
                    SteamVR_Actions.default_PlaceWulffElement,
                    SteamVR_Actions.default_Scroll,
                    SteamVR_Actions.geologieVirtuelle_ActivateGeneralInterface,
                    SteamVR_Actions.geologieVirtuelle_ActivateMeasureInterface,
                    SteamVR_Actions.geologieVirtuelle_ActivateMeasurePointer,
                    SteamVR_Actions.geologieVirtuelle_PlacePoint,
                    SteamVR_Actions.geologieVirtuelle_PlacePlane,
                    SteamVR_Actions.geologieVirtuelle_PlaceMarker,
                    SteamVR_Actions.geologieVirtuelle_PlaceWulfElement,
                    SteamVR_Actions.geologieVirtuelle_MoveElement,
                    SteamVR_Actions.geologieVirtuelle_DisplayResults};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[0];
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_ActivateGeneralInterface,
                    SteamVR_Actions.default_ActivateMeasureInterface,
                    SteamVR_Actions.default_PlacePoint,
                    SteamVR_Actions.default_PlacePlane,
                    SteamVR_Actions.default_ActivateMeasurePointer,
                    SteamVR_Actions.default_DisplayResults,
                    SteamVR_Actions.default_PlaceMarker,
                    SteamVR_Actions.default_MoveElement,
                    SteamVR_Actions.default_PlaceWulffElement,
                    SteamVR_Actions.default_Scroll,
                    SteamVR_Actions.geologieVirtuelle_ActivateGeneralInterface,
                    SteamVR_Actions.geologieVirtuelle_ActivateMeasureInterface,
                    SteamVR_Actions.geologieVirtuelle_ActivateMeasurePointer,
                    SteamVR_Actions.geologieVirtuelle_PlacePoint,
                    SteamVR_Actions.geologieVirtuelle_PlacePlane,
                    SteamVR_Actions.geologieVirtuelle_PlaceMarker,
                    SteamVR_Actions.geologieVirtuelle_PlaceWulfElement,
                    SteamVR_Actions.geologieVirtuelle_MoveElement,
                    SteamVR_Actions.geologieVirtuelle_DisplayResults};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_ActivateGeneralInterface = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ActivateGeneralInterface")));
            SteamVR_Actions.p_default_ActivateMeasureInterface = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ActivateMeasureInterface")));
            SteamVR_Actions.p_default_PlacePoint = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PlacePoint")));
            SteamVR_Actions.p_default_PlacePlane = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PlacePlane")));
            SteamVR_Actions.p_default_ActivateMeasurePointer = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ActivateMeasurePointer")));
            SteamVR_Actions.p_default_DisplayResults = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/DisplayResults")));
            SteamVR_Actions.p_default_PlaceMarker = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PlaceMarker")));
            SteamVR_Actions.p_default_MoveElement = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/MoveElement")));
            SteamVR_Actions.p_default_PlaceWulffElement = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PlaceWulffElement")));
            SteamVR_Actions.p_default_Scroll = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Scroll")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_mixedreality_ExternalCamera = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/mixedreality/in/ExternalCamera")));
            SteamVR_Actions.p_geologieVirtuelle_ActivateGeneralInterface = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/ActivateGeneralInterface")));
            SteamVR_Actions.p_geologieVirtuelle_ActivateMeasureInterface = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/ActivateMeasureInterface")));
            SteamVR_Actions.p_geologieVirtuelle_ActivateMeasurePointer = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/ActivateMeasurePointer")));
            SteamVR_Actions.p_geologieVirtuelle_PlacePoint = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/PlacePoint")));
            SteamVR_Actions.p_geologieVirtuelle_PlacePlane = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/PlacePlane")));
            SteamVR_Actions.p_geologieVirtuelle_PlaceMarker = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/PlaceMarker")));
            SteamVR_Actions.p_geologieVirtuelle_PlaceWulfElement = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/PlaceWulfElement")));
            SteamVR_Actions.p_geologieVirtuelle_MoveElement = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/MoveElement")));
            SteamVR_Actions.p_geologieVirtuelle_DisplayResults = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GeologieVirtuelle/in/DisplayResults")));
        }
    }
}
